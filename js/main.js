import { initRouter, goToScreen, startNextMiniGame } from "./router.js";
import { setPlayerName } from "./state.js";
import { dlog, derr, dash, wireClick, assertEl, runDiagnostics, wrapGoToScreen, setDebug } from "./debug.js";
import "./admin.js";
import "./audio.js";

// =====================
// Initialisation
// =====================
document.addEventListener("DOMContentLoaded", () => {
  dash("BOOT");
  // Active le mode verbeux si la checkbox admin existe
  const dbgChk = document.getElementById("debug-mode");
  if (dbgChk) {
    setDebug(dbgChk.checked);
    dbgChk.addEventListener("change", () => setDebug(dbgChk.checked));
  }

  // Handler global d‚Äôerreurs pour voir tout dans #debug-log
  window.addEventListener("error", (e) => {
    derr("window.onerror:", e.message, "at", e.filename + ":" + e.lineno + ":" + e.colno);
  });
  window.addEventListener("unhandledrejection", (e) => {
    derr("Unhandled Promise Rejection:", e.reason);
  });

  dlog("üéÆ Initialisation du jeu‚Ä¶");
  initRouter();

  // Diagnostics de base
  runDiagnostics();

  // S√©curiser goToScreen avec un wrapper de debug (pour les appels depuis main.js)
  const safeGoToScreen = wrapGoToScreen(goToScreen);

  // R√©cup√®re les √©l√©ments
  const nameInput = assertEl("player-name", "input pseudo");
  const startBtnOk = wireClick("start-btn", () => {
    dlog("Handler start-btn: d√©but");
    if (!nameInput) {
      derr("Impossible de lire le pseudo: #player-name introuvable");
      return;
    }
    const name = nameInput.value.trim();
    dlog("Pseudo saisi =", JSON.stringify(name));
    if (!name) {
      alert("Entre un pseudo pour commencer !");
      derr("Pseudo vide ‚Üí arr√™t");
      return;
    }
    try {
      setPlayerName(name);
      dlog("setPlayerName OK:", name);
    } catch (e) {
      derr("setPlayerName a √©chou√©:", e);
    }

    // Passage Intro
    try {
      const introTxt = assertEl("intro-content", "texte intro");
      if (introTxt) introTxt.textContent = `Bienvenue ${name}, le royaume t‚Äôattend‚Ä¶`;
      safeGoToScreen("intro");
      dlog("Navigation vers intro demand√©e");
    } catch (e) {
      derr("Erreur pendant goToScreen('intro'):", e);
    }
  });

  if (!startBtnOk) {
    derr("Le listener sur #start-btn n‚Äôa PAS pu √™tre attach√© (√©l√©ment manquant ?).");
  }

  // Bouton "Entrer dans le royaume" (lancement puzzles)
  const beginOk = wireClick("begin-game", () => {
    dlog("Handler begin-game: d√©but");
    try {
      // D√©marre la suite (router encha√Æne les mini-jeux)
      startNextMiniGame();
      dlog("startNextMiniGame() appel√©");
    } catch (e) {
      derr("startNextMiniGame() a lev√©:", e);
    }
  });

  if (!beginOk) {
    derr("Le listener sur #begin-game n‚Äôa PAS pu √™tre attach√© (√©l√©ment manquant ?).");
  }
});
