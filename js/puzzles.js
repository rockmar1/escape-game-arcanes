import { GameState, triggerVictory, unlockZone } from "./state.js";

const puzzles = [
  { id: "runes", zone: "zone-bibliotheque", text: "üîÆ Runes anciennes", solution: "SOLVE" },
  { id: "texteInverse", zone: "zone-bibliotheque", text: "üìú Texte invers√©", solution: "MAGIE" },
  { id: "potions", zone: "zone-labo", text: "‚öóÔ∏è Potion mystique", solution: "ROUGE+BLEU=VIOLET" },
  { id: "labyrinthe", zone: "zone-labo", text: "üåÄ Labyrinthe", solution: "SORTIE NORD" },
  { id: "etoiles", zone: "zone-observatoire", text: "‚ú® Constellations", solution: "ORION" },
  { id: "horloge", zone: "zone-observatoire", text: "‚è≥ Horloge enchant√©e", solution: "MINUIT" },
  { id: "cristaux", zone: "zone-observatoire", text: "üíé Cristaux sonores", solution: "DO-RE-MI" }
];

// Ajout boutons enigmes
puzzles.forEach(p => {
  const btn = document.createElement("button");
  btn.textContent = p.text;
  btn.onclick = () => playPuzzle(p);
  document.querySelector(`#${p.zone} .puzzles`).appendChild(btn);

  // Ajout solutions admin
  const li = document.createElement("li");
  li.textContent = `${p.text} ‚Üí ${p.solution}`;
  document.getElementById("solutions-list").appendChild(li);
});

function playPuzzle(p) {
  const answer = prompt(`√ânigme : ${p.text}\nEntre ta r√©ponse`);
  if (answer && answer.toUpperCase() === p.solution.toUpperCase()) {
    solvePuzzle(p);
  } else {
    alert("Mauvaise r√©ponse !");
  }
}

function solvePuzzle(p) {
  alert(`√ânigme ${p.text} r√©solue !`);
  GameState.player.score += 100;
  document.getElementById("score-display").textContent = GameState.player.score;
  GameState.puzzlesSolved.push(p.id);
  document.querySelector(`#${p.zone} button`).remove();

  if (p.id === "runes") unlockZone("zone-labo");
  if (p.id === "potions") unlockZone("zone-observatoire");

  if (GameState.puzzlesSolved.length === puzzles.length) {
    triggerVictory("Toutes les √©nigmes ont √©t√© r√©solues !");
  }
}
