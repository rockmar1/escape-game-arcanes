const volumeFactor = 0.75;

// === Classes ===
class Joueur {
  constructor(pseudo) {
    this.pseudo = pseudo;
    this.bonusUtilises = 0;
    this.inventaire = [];
  }
  ajouterObjet(obj) { this.inventaire.push(obj); afficherInventaire(); }
  utiliserBonus(type) { this.bonusUtilises++; }
}

class Enigme {
  constructor(id, question, reponses, indice="", bonus=null) {
    this.id = id;
    this.question = question;
    this.reponses = reponses; // array de r√©ponses valides
    this.indice = indice;
    this.bonus = bonus; // bonus √† donner si trouv√©
  }
  afficher() {
    const container = document.createElement("div");
    container.classList.add("enigme");
    container.id = "enigme"+this.id;
    container.innerHTML = `<h2>√ânigme ${this.id}</h2>
      <p>${this.question}</p>
      <input type="text" id="reponse${this.id}">
      <button class="valider" data-id="${this.id}">Valider</button>
      <p class="indice hidden">${this.indice}</p>`;
    document.getElementById("enigmesContainer").appendChild(container);
    container.querySelector(".valider").addEventListener("click",()=>jeu.validerEnigme(this.id));
  }
}

// === Gestion du jeu ===
class GameManager {
  constructor() {
    this.joueur = null;
    this.temps = 0;
    this.tempsMax = 1800;
    this.timer = null;
    this.enigmes = [];
    this.currentEnigme = 0;
  }

  demarrer(pseudo){
    this.joueur = new Joueur(pseudo);
    switchScreen("pseudoScreen","introScreen");
    afficherIntroTexte();
    let musique=document.getElementById("musiqueIntro"); musique.volume=0.3*volumeFactor; musique.play().catch(()=>{});
  }

  lancerJeu(){
    switchScreen("introScreen","gameScreen");
    document.getElementById("musiqueIntro").pause();
    let ambiance=document.getElementById("musiqueAmbiance"); ambiance.volume=0.2*volumeFactor; ambiance.play().catch(()=>{});
    this.timer = setInterval(()=>this.updateTimer(),1000);
    this.enigmes[this.currentEnigme].afficher();
  }

  updateTimer(){
    this.temps++;
    let restant = this.tempsMax - this.temps;
    document.getElementById("timer").innerText = `Temps restant : ${formatTemps(restant)}`;
    if(restant<=0){ clearInterval(this.timer); this.fin(false); }
  }

  validerEnigme(id){
    const input = document.getElementById("reponse"+id).value.toLowerCase();
    const enigme = this.enigmes[this.currentEnigme];
    if(enigme.reponses.includes(input)){
      alert("Bonne r√©ponse !");
      if(enigme.bonus) this.joueur.ajouterObjet(enigme.bonus);
      document.getElementById("enigme"+id).remove();
      this.currentEnigme++;
      if(this.currentEnigme < this.enigmes.length) this.enigmes[this.currentEnigme].afficher();
      else { clearInterval(this.timer); this.fin(true); }
    }else{ alert("Mauvaise r√©ponse, essaye encore !"); }
  }

  fin(victoire){
    document.getElementById("gameScreen").classList.add("hidden");
    document.getElementById("inventaire").classList.add("hidden");
    const endScreen = document.getElementById("endScreen");
    endScreen.classList.remove("hidden");
    const img = document.getElementById("endImage");
    const narrative = document.getElementById("finNarrative");

    if(victoire){
      document.getElementById("musiqueAmbiance").pause();
      document.getElementById("musiqueVictoire").volume=1*volumeFactor;
      document.getElementById("musiqueVictoire").play().catch(()=>{});
      img.src="images/victoire.jpg";
      narrative.innerHTML=`<h2>Victoire ! ‚ú®</h2><p>Le royaume est illumin√©, les habitants acclament votre bravoure et la magie rena√Æt. Vous √™tes un v√©ritable h√©ros !</p>`;
      lancerPluie("etoiles"); lancerConfettis(); ajouterScore("Victoire",this);
    }else{
      document.getElementById("musiqueAmbiance").pause();
      document.getElementById("musiqueDefaite").volume=1*volumeFactor;
      document.getElementById("musiqueDefaite").play().catch(()=>{});
      img.src="images/defaite.jpg";
      document.body.classList.add("tremble-finite");
      setTimeout(()=>document.body.classList.remove("tremble-finite"),5000);
      narrative.innerHTML=`<h2>D√©faite... üíÄ</h2><p>L‚Äôombre s‚Äô√©tend sur le royaume et le silence r√®gne. Les h√©ros devront revenir pour relever le d√©fi.</p>`;
      ajouterScore("D√©faite",this);
    }
  }
}

// === Utilitaires ===
function switchScreen(oldId,newId){
  document.getElementById(oldId).classList.add("hidden");
  document.getElementById(newId).classList.remove("hidden");
}

function afficherIntroTexte(){
  const texte = `Il √©tait une fois, dans un royaume baign√© de lumi√®re, une ombre
s‚Äô√©tendit et plongea le monde dans le sommeil √©ternel. Seuls des aventuriers courageux pourront lever cette mal√©diction en r√©solvant des √©nigmes et en d√©couvrant les artefacts magiques. Le temps vous est compt√©‚Ä¶`;
  const container = document.querySelector("#introScreen .page.droite");
  container.innerHTML='<h2>Chapitre 1 : Le Royaume Oubli√©</h2><p class="typed-text"></p>';
  const p = container.querySelector("p");
  let i=0;
  function typer(){ if(i<texte.length){ p.textContent+=texte[i]; i++; setTimeout(typer,40);} }
  typer();
}

function afficherInventaire(){
  const cont = document.getElementById("contenuInventaire");
  cont.innerHTML="";
  jeu.joueur.inventaire.forEach(obj=>{
    const img = document.createElement("img");
    img.src="images/"+obj+".png"; img.title=obj; cont.appendChild(img);
  });
}

function ajouterScore(resultat,game){
  const ligne = document.createElement("tr");
  ligne.innerHTML=`<td>${game.joueur.pseudo}</td><td>${resultat}</td><td>${formatTemps(game.temps)}</td><td>${game.joueur.bonusUtilises}</td>`;
  document.getElementById("scoreTableBody").appendChild(ligne);
}

function formatTemps(s){ return `${Math.floor(s/60)} min ${s%60} s`; }

// === Effets visuels simplifi√©s ===
function lancerPluie(type){ /* similaire √† version pr√©c√©dente */ }
function lancerConfettis(){ /* similaire √† version pr√©c√©dente */ }

// === Initialisation du jeu et √©nigmes ===
const jeu = new GameManager();
jeu.enigmes = [
  new Enigme(1,"Je suis toujours devant toi mais tu ne peux jamais m‚Äôatteindre.",["avenir","futur"],"Indice : tu peux toujours essayer de courir apr√®s‚Ä¶","cl√©"),
  new Enigme(2,"Plus tu en prends, plus tu en laisses derri√®re toi.",["pas","empreinte"],"Indice : regarde bien le sol apr√®s une promenade‚Ä¶","etoile"),
  new Enigme(3,"On me casse mais je ne tombe jamais.",["silence"],"Indice : cela arrive souvent dans une conversation‚Ä¶","grimoire")
];

// === Boutons ===
document.getElementById("startButton").addEventListener("click",()=>{
  const pseudo = document.getElementById("pseudoInput").value.trim();
  if(!pseudo){ alert("Entre ton pseudo !"); return; }
  jeu.demarrer(pseudo);
});
document.getElementById("enterGame").addEventListener("click",()=>jeu.lancerJeu());
document.getElementById("replayButton").addEventListener("click",()=>location.reload());
